/* transition + transform */
/* transition : 기존 속성에 이벤트에 의해 변화가 있을 때 여러 애니메이션 속성 적용 */
/* transform : 2d, 3d - 회전, 이동, 크기, 기울기 적용 속성 (중심축 변경 가능 특징) */
#btn {
    border:2px solid #000; padding:20px 100px;
    transform:skewX(-5deg); /* transform은 자식, 자손에도 영향을 준다! => 글자도 기울여져있음! */
    transition:transform 0.3s; /* 기본선택자에 작성 시 마우스호버, 마우스아웃 모두 적용 */
}
#btn:hover {transform:skewX(0);}
.link {
    display:block; width:150px; height:150px;
    background:radial-gradient(circle, #fff, #ddd);
    background-size:250%; background-position:center;
    border-radius:50%;
    text-align:center; line-height:150px; /* 텍스트 가운데 정렬 */
    transition:background-size 0.5s;
}
.link:hover {
    background-size:100%;
    animation:scale 0.5s ease alternate;
}
@keyframes scale {
    0% {transform:scale(1)}
    30% {transform:scale(0.8)}
    70% {transform:scale(1)}
    100% {transform:scale(1.1)}
}
/* 시간차 애니메이션 */
.city {
    width:1000px; margin:0 auto; padding:20px;
    background-color:#fff;
}
.city .car {width:100px; position:relative; left:0;}
.city .car img {width:100%;}
.city .car1 {animation:carMove 3s both;}
.city .car2 {animation:Move2 7s 0.3s both; 
    filter:hue-rotate(200deg);}
.city .car3 {animation:carMove 0.5s alternate-reverse; 
    transform:scaleX(-1); /* 좌우반전 */
    filter:hue-rotate(-200deg);}
@keyframes carMove {
    from {left:0;}
    to {left:800px;}
}
@keyframes Move2 {
    from {left:0;}
    to {left:1000px}
}